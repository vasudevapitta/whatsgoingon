{"version":3,"sources":["components/Footer/fb.svg","components/Footer/linkedin.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Load/Load.jsx","components/NewsSection/NewsSection.jsx","components/News/News.jsx","App.js","serviceWorker.js","index.js","components/Footer/insta.svg"],"names":["module","exports","Header","props","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","componentDidUpdate","componentWillUnmount","className","onSubmit","this","userCustomSearch","type","value","query","onChange","handleChange","PureComponent","defaultProps","Footer","state","hasError","href","target","title","src","insta","alt","fb","linkedin","rel","Load","NewsSection","articles","news","Fragment","map","article","i","JSON","stringify","toLowerCase","includes","key","publishedAt","slice","urlToImage","description","content","url","author","Component","News","App","e","setState","preventDefault","loading","fetch","then","res","json","trim","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8245b286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.62d8b6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.d9049f46.svg\";","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Header.styles';\n\nclass Header extends PureComponent { \n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount = () => {\n    console.log('Header will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('Header mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('Header will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('Header will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('Header did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('Header will unmount');\n  }\n\n  render(){\n    return(\n      <header>\n      <h1>\n      What's Going On\n      </h1>\n      <section className=\"search\">\n      <form onSubmit={this.props.userCustomSearch}>\n      <input type=\"text\" value={this.props.query} onChange={this.props.handleChange}>\n      </input>\n      <button type=\"submit\">Search</button>\n      </form>\n      </section>\n    </header>\n    )\n  }\n}\n\nHeader.propTypes = {\n  // bla: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Header;\n","import React, { PureComponent } from 'react';\nimport insta from './insta.svg';\nimport fb from './fb.svg';\nimport linkedin from './linkedin.svg';\nimport PropTypes from 'prop-types';\n//import { Test } from './Footer.styles';\n\nclass Footer extends PureComponent { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentWillMount = () => {\n    console.log('Footer will mount');\n  }\n\n  componentDidMount = () => {\n    console.log('Footer mounted');\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log('Footer will receive props', nextProps);\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    console.log('Footer will update', nextProps, nextState);\n  }\n\n  componentDidUpdate = () => {\n    console.log('Footer did update');\n  }\n\n  componentWillUnmount = () => {\n    console.log('Footer will unmount');\n  }\n\n  render () {\n    const extLink = '. External link';\n    return (\n        <footer>\n          <div className=\"social-icon-div\">\n            <a href=\"https://instagram.com/vasudevaartschool\" target=\"_blank\" title={`Connect with me on Instagram ${extLink}`}>\n            <img src={insta} alt=\"link to vasudeva art school instagram page\" className=\"social-icon\"/>\n            </a>\n            <a href=\"https://www.facebook.com/vasudevaartschool\" target=\"_blank\" title=\"Connect with me on  Facebook\">\n            <img src={fb} alt=\"link to vasudeva art school facebook page\" className=\"social-icon\"/>\n            </a>\n            <a href=\"https://www.linkedin.com/in/vasudevapitta\" target=\"_blank\" title=\"Connect with me on Linkedin\">\n            <img src={linkedin} alt=\"link to vasudeva pitta linkedin page\" className=\"social-icon\"/>\n            </a>\n          </div>\n          <small>Learn more <a href=\"https://www.who.int/health-topics/coronavirus\" target=\"_blank\" rel=\"noopener\">https://www.who.int</a></small>\n        </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  // bla: PropTypes.string,\n};\n\nFooter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './Load.styles';\n\nconst Load = (props) => (\n  <h1 className=\"LoadWrapper\">\n    Content Loading\n  </h1>\n);\n\nLoad.propTypes = {\n  // bla: PropTypes.string,\n};\n\nLoad.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Load;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './NewsSection.styles';\nimport LazyLoad from'react-lazyload';\n\nclass NewsSection extends Component {\n  render(){\n    const articles = this.props.news.articles;\n    const query = this.props.query;\n    return(\n      <React.Fragment>\n        {articles && articles.map((article, i)=> JSON.stringify(article).toLowerCase().includes(query.toLowerCase()) &&\n        <div className=\"news-section\" key={i}>\n        {article.title && <h2>{article.title}</h2>}\n        {article.publishedAt && <p>{article.publishedAt.slice(0,10)}</p>}\n        <LazyLoad>\n        <figure>\n          {article.urlToImage && <img src={article.urlToImage} alt={article.title} className=\"img\"/>}\n          {article.description && <figcaption>{article.description}</figcaption>}\n        </figure>\n        </LazyLoad>\n        {article.content && <p>{article.content}</p>}\n        {article.url && <span><a href={article.url} target=\"_blank\" rel=\"noopener\">Read more (external link)</a></span>}\n        {article.author && <h5>Author- {article.author}</h5>}\n        </div>\n        )}\n      </React.Fragment>\n    )\n  }\n  \n}\n\nNewsSection.propTypes = {\n  // bla: PropTypes.string,\n};\n\nNewsSection.defaultProps = {\n  // bla: 'test',\n};\n\nexport default NewsSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import { Test } from './News.styles';\nimport NewsSection from '../NewsSection/NewsSection';\n\nconst News = (props) => (\n  <div className=\"NewsWrapper\">\n    <NewsSection news={props.news} query={props.query}/>\n  </div>\n);\n\nNews.propTypes = {\n  // bla: PropTypes.string,\n};\n\nNews.defaultProps = {\n  // bla: 'test',\n};\n\nexport default News;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Load from './components/Load/Load';\nimport News from './components/News/News';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      news: [],\n      loading: false,\n      query: '',\n      userCustomSearch: ''\n    }\n  }\n\n  handleChange=e=>{\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  userCustomSearch=e=>{\n    e.preventDefault();\n    this.setState({\n      userCustomSearch: this.state.query\n    });\n  }\n \n  async componentDidMount() {\n    this.setState({loading: true});\n\n    const API_KEY = '4b64ca4f39cb4f52a5ff2843d6f01541';\n    const url= `https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`;\n\n     try {\n      const news=await fetch(url)\n          .then(res => res.json())\n          .then(res=>this.setState({news: res}))\n          .then(this.setState({loading: false}))\n          console.log(this.state.news);\n     }\n\n     catch(err) {\n      console.log(err)\n     }\n  }\n\n\n  async componentDidUpdate() {\n    const userCustomSearch = this.state.userCustomSearch;\n    if(userCustomSearch.trim(\"\")){\n      const API_KEY = '4b64ca4f39cb4f52a5ff2843d6f01541';\n      const url=`https://newsapi.org/v2/everything?q=${userCustomSearch}&apiKey=${API_KEY}`;\n\n      try {\n        const news=await fetch(url)\n            .then(res => res.json())\n            .then(res=>this.setState({news: res}))\n            .then(this.setState({loading: false}))\n            this.setState({userCustomSearch: ''});\n      }\n\n      catch(err) {\n        console.log(err)\n      }\n    }\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n      <Header\n      handleChange={this.handleChange}\n      query={this.state.query}\n      userCustomSearch={this.userCustomSearch}/>\n\n      {this.state.loading ? <Load/> : ''}\n      {this.state.loading ? '': <News news={this.state.news} query={this.state.query}/>}\n      <Footer/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/insta.e75317fa.svg\";"],"sourceRoot":""}